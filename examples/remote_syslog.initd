#!/bin/bash

### BEGIN INIT INFO
# Provides: remote_syslog
# Required-Start: $network $remote_fs $syslog
# Required-Stop: $network $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start and Stop
# Description: Runs remote_syslog
### END INIT INFO

#       /etc/init.d/remote_syslog
#
# Starts the remote_syslog daemon
#
# chkconfig: 345 90 5
# description: Runs remote_syslog
#
# processname: remote_syslog

prog="remote_syslog"
config="/etc/log_files.yml"
pid_dir="/var/run"

EXTRAOPTIONS=""

pid_file="$pid_dir/$prog.pid"

PATH=/sbin:/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH

RETVAL=0

is_running(){
  # Do we have PID-file?
  if [ -f "$pid_file" ]; then
    # Check if proc is running
    pid=`cat "$pid_file" 2> /dev/null`
    if [[ $pid != "" ]]; then
      exepath=`readlink /proc/"$pid"/exe 2> /dev/null`      
      exe=`basename "$exepath"`
      if [[ $exe == "remote_syslog" ]] || [[ $exe == "remote_syslog (deleted)" ]]; then
        # Process is running
        return 0
      fi
    fi
  fi
  return 1
}

start(){
  echo "Starting $prog"

  unset HOME MAIL USER USERNAME
  $prog -c $config --pid-file=$pid_file $EXTRAOPTIONS
  RETVAL=$?  
  return $RETVAL
}

stop(){
  echo "Stopping $prog..."
  if is_running; then
    kill -TERM `cat $pid_file` >/dev/null 2>&1
    sleep 1
    if is_running && sleep 1 &&
      is_running && sleep 3 &&
      is_running ; then
      kill -KILL `cat $pid_file` >/dev/null 2>&1
      sleep 1
    fi

    if is_running; then
      echo "Failed to kill process"
      RETVAL=1
    else
      echo "Stopped"
      RETVAL=0
    fi
  else
    echo "Not running"
    RETVAL=0
  fi
  
  return $RETVAL
}

status(){
  if (is_running); then
    echo "Running"
  else
    echo "Not running"
  fi
}

reload(){
  restart
}

restart(){
  stop
  start
}

condrestart(){
  is_running && restart  
  return 0
}


# See how we were called.
case "$1" in
    start)
  start
  ;;
    stop)
  stop
  ;;
    status)
  status
  ;;
    restart)
  restart
  ;;
    reload)
  reload
  ;;
    condrestart)
  condrestart
  ;;
    *)
  echo $"Usage: $0 {start|stop|status|restart|condrestart|reload}"
  RETVAL=1
esac

exit $RETVAL